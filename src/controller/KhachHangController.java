package controller;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.Scanner;

import model.KhachHang;
import service.KhachHangService;
import service.Impl.KhachHangServiceImpl;

public class KhachHangController {

    private KhachHangService khachHangService;
    private Scanner scanner;
    private SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

    public KhachHangController() {
        khachHangService = new KhachHangServiceImpl();
        scanner = new Scanner(System.in);
    }

    // ================= MENU CH√çNH =================
    public void hienThiMenu() {
        while (true) {
            System.out.println("\n=== QU·∫¢N L√ù KH√ÅCH H√ÄNG ===");
            System.out.println("1. Th√™m kh√°ch h√†ng");
            System.out.println("2. Hi·ªÉn th·ªã danh s√°ch kh√°ch h√†ng");
            System.out.println("3. T√¨m ki·∫øm kh√°ch h√†ng");
            System.out.println("4. C·∫≠p nh·∫≠t kh√°ch h√†ng");
            System.out.println("5. X√≥a kh√°ch h√†ng");
            System.out.println("6. Th·ªëng k√™ kh√°ch h√†ng");
            System.out.println("0. Tho√°t");
            System.out.print("Ch·ªçn ch·ª©c nƒÉng: ");

            int choice = scanner.nextInt();
            scanner.nextLine(); // b·ªè tr√¥i d√≤ng

            switch (choice) {
                case 1 -> themKhachHang();
                case 2 -> hienThiTatCaKhachHang();
                case 3 -> timKiemKhachHang();
                case 4 -> capNhatKhachHang();
                case 5 -> xoaKhachHang();
                case 6 -> thongKeKhachHang();
                case 0 -> {
                    System.out.println("ƒê√£ tho√°t kh·ªèi ch∆∞∆°ng tr√¨nh qu·∫£n l√Ω kh√°ch h√†ng!");
                    return;
                }
                default -> System.out.println("L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!");
            }
        }
    }

    // ================= 1. TH√äM KH√ÅCH H√ÄNG =================
    private void themKhachHang() {
        System.out.println("\n=== TH√äM KH√ÅCH H√ÄNG M·ªöI ===");

        System.out.print("Nh·∫≠p h·ªç t√™n: ");
        String hoTen = scanner.nextLine();
        System.out.print("Nh·∫≠p gi·ªõi t√≠nh (Nam/N·ªØ): ");
        String gioiTinh = scanner.nextLine();
        System.out.print("Nh·∫≠p CMND: ");
        String cmnd = scanner.nextLine();
        System.out.print("Nh·∫≠p ƒë·ªãa ch·ªâ: ");
        String diaChi = scanner.nextLine();
        System.out.print("Nh·∫≠p ng√†y sinh (yyyy-MM-dd): ");
        String ngaySinhStr = scanner.nextLine();

        java.util.Date utilDate;
        try {
            utilDate = sdf.parse(ngaySinhStr);
        } catch (ParseException e) {
            System.out.println("Ng√†y sinh kh√¥ng h·ª£p l·ªá!");
            return;
        }

        // üî• CHUY·ªÇN t·ª´ java.util.Date sang java.sql.Date
        java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());

        System.out.print("Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i: ");
        String sdt = scanner.nextLine();

        // ‚úÖ D√πng sqlDate (ƒë√∫ng ki·ªÉu v·ªõi model)
        KhachHang kh = new KhachHang("", hoTen, gioiTinh, cmnd, diaChi, sqlDate, sdt);

        if (khachHangService.themKhachHang(kh)) {
            System.out.println("Th√™m kh√°ch h√†ng th√†nh c√¥ng! M√£ KH: " + kh.getMaKH());
        } else {
            System.out.println("Th√™m kh√°ch h√†ng th·∫•t b·∫°i!");
        }
    }

    // ================= 2. HI·ªÇN TH·ªä DANH S√ÅCH =================
    private void hienThiTatCaKhachHang() {
        System.out.println("\n=== DANH S√ÅCH KH√ÅCH H√ÄNG ===");
        List<KhachHang> ds = khachHangService.layTatCaKhachHang();

        if (ds.isEmpty()) {
            System.out.println("Kh√¥ng c√≥ kh√°ch h√†ng n√†o trong danh s√°ch!");
            return;
        }

        System.out.printf("%-10s %-20s %-10s %-15s %-20s %-15s %-12s%n",
                "M√£ KH", "H·ªç t√™n", "Gi·ªõi t√≠nh", "CMND", "ƒê·ªãa ch·ªâ", "Ng√†y sinh", "SƒêT");

        for (KhachHang kh : ds) {
            System.out.printf("%-10s %-20s %-10s %-15s %-20s %-15s %-12s%n",
                    kh.getMaKH(), kh.getHoTen(), kh.getGioiTinh(), kh.getCMND(),
                    kh.getDiaChi(), sdf.format(kh.getNgaySinh()), kh.getSDT());
        }
    }

    // ================= 3. T√åM KI·∫æM =================
    private void timKiemKhachHang() {
        System.out.println("\n=== T√åM KI·∫æM KH√ÅCH H√ÄNG ===");
        System.out.println("1. Theo m√£ kh√°ch h√†ng");
        System.out.println("2. Theo h·ªç t√™n");
        System.out.println("3. Theo CMND");
        System.out.println("4. Theo s·ªë ƒëi·ªán tho·∫°i");
        System.out.print("Ch·ªçn: ");
        int c = scanner.nextInt();
        scanner.nextLine();

        switch (c) {
            case 1 -> {
                System.out.print("Nh·∫≠p m√£ kh√°ch h√†ng: ");
                String ma = scanner.nextLine();
                KhachHang kh = khachHangService.timKhachHangTheoMa(ma);
                if (kh != null)
                    hienThiThongTinKhachHang(kh);
                else
                    System.out.println("Kh√¥ng t√¨m th·∫•y kh√°ch h√†ng!");
            }
            case 2 -> {
                System.out.print("Nh·∫≠p h·ªç t√™n: ");
                String ten = scanner.nextLine();
                List<KhachHang> ds = khachHangService.timKhachHangTheoHoTen(ten);
                if (ds.isEmpty())
                    System.out.println("Kh√¥ng t√¨m th·∫•y kh√°ch h√†ng!");
                else
                    ds.forEach(this::hienThiThongTinKhachHang);
            }
            case 3 -> {
                System.out.print("Nh·∫≠p CMND: ");
                String cmnd = scanner.nextLine();
                List<KhachHang> ds = khachHangService.timKhachHangTheoCMND(cmnd);
                if (ds.isEmpty())
                    System.out.println("Kh√¥ng t√¨m th·∫•y kh√°ch h√†ng!");
                else
                    ds.forEach(this::hienThiThongTinKhachHang);
            }
            case 4 -> {
                System.out.print("Nh·∫≠p SƒêT: ");
                String sdt = scanner.nextLine();
                List<KhachHang> ds = khachHangService.timKhachHangTheoSDT(sdt);
                if (ds.isEmpty())
                    System.out.println("Kh√¥ng t√¨m th·∫•y kh√°ch h√†ng!");
                else
                    ds.forEach(this::hienThiThongTinKhachHang);
            }
            default -> System.out.println("L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!");
        }
    }

    // ================= 4. C·∫¨P NH·∫¨T =================
    private void capNhatKhachHang() {
        System.out.println("\n=== C·∫¨P NH·∫¨T KH√ÅCH H√ÄNG ===");
        System.out.print("Nh·∫≠p m√£ kh√°ch h√†ng c·∫ßn c·∫≠p nh·∫≠t: ");
        String ma = scanner.nextLine();

        KhachHang kh = khachHangService.timKhachHangTheoMa(ma);
        if (kh == null) {
            System.out.println("Kh√¥ng t√¨m th·∫•y kh√°ch h√†ng!");
            return;
        }

        System.out.println("ƒê·ªÉ tr·ªëng n·∫øu kh√¥ng mu·ªën thay ƒë·ªïi:");

        System.out.print("H·ªç t√™n (" + kh.getHoTen() + "): ");
        String ten = scanner.nextLine();
        if (!ten.isEmpty())
            kh.setHoTen(ten);

        System.out.print("Gi·ªõi t√≠nh (" + kh.getGioiTinh() + "): ");
        String gt = scanner.nextLine();
        if (!gt.isEmpty())
            kh.setGioiTinh(gt);

        System.out.print("CMND (" + kh.getCMND() + "): ");
        String cmnd = scanner.nextLine();
        if (!cmnd.isEmpty())
            kh.setCMND(cmnd);

        System.out.print("ƒê·ªãa ch·ªâ (" + kh.getDiaChi() + "): ");
        String diaChi = scanner.nextLine();
        if (!diaChi.isEmpty())
            kh.setDiaChi(diaChi);

        System.out.print("Ng√†y sinh (" + sdf.format(kh.getNgaySinh()) + "): ");
        String ngayStr = scanner.nextLine();
        if (!ngayStr.isEmpty()) {
            try {
                java.util.Date utilDate = sdf.parse(ngayStr);
                java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
                kh.setNgaySinh(sqlDate);
            } catch (ParseException e) {
                System.out.println("Ng√†y sinh kh√¥ng h·ª£p l·ªá!");
            }
        }

        System.out.print("SƒêT (" + kh.getSDT() + "): ");
        String sdt = scanner.nextLine();
        if (!sdt.isEmpty())
            kh.setSDT(sdt);

        if (khachHangService.capNhatKhachHang(kh))
            System.out.println("C·∫≠p nh·∫≠t kh√°ch h√†ng th√†nh c√¥ng!");
        else
            System.out.println("C·∫≠p nh·∫≠t th·∫•t b·∫°i!");
    }

    // ================= 5. X√ìA =================
    private void xoaKhachHang() {
        System.out.println("\n=== X√ìA KH√ÅCH H√ÄNG ===");
        System.out.print("Nh·∫≠p m√£ kh√°ch h√†ng c·∫ßn x√≥a: ");
        String ma = scanner.nextLine();

        if (khachHangService.xoaKhachHang(ma))
            System.out.println("ƒê√£ x√≥a kh√°ch h√†ng " + ma);
        else
            System.out.println("X√≥a th·∫•t b·∫°i ho·∫∑c m√£ kh√¥ng t·ªìn t·∫°i!");
    }

    // ================= 6. TH·ªêNG K√ä =================
    private void thongKeKhachHang() {
        List<KhachHang> ds = khachHangService.layTatCaKhachHang();
        System.out.println("\n=== TH·ªêNG K√ä KH√ÅCH H√ÄNG ===");
        System.out.println("T·ªïng s·ªë kh√°ch h√†ng: " + ds.size());

        long soNam = ds.stream().filter(kh -> kh.getGioiTinh().equalsIgnoreCase("Nam")).count();
        long soNu = ds.stream().filter(kh -> kh.getGioiTinh().equalsIgnoreCase("N·ªØ")).count();

        System.out.println("S·ªë kh√°ch h√†ng Nam: " + soNam);
        System.out.println("S·ªë kh√°ch h√†ng N·ªØ: " + soNu);
    }

    // ================= H√ÄM PH·ª§ =================
    private void hienThiThongTinKhachHang(KhachHang kh) {
        System.out.printf("%-10s %-20s %-10s %-15s %-20s %-15s %-12s%n",
                kh.getMaKH(), kh.getHoTen(), kh.getGioiTinh(), kh.getCMND(),
                kh.getDiaChi(), sdf.format(kh.getNgaySinh()), kh.getSDT());
    }
}
